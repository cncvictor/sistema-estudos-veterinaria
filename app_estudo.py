import streamlit as st
import os
import markdown
import json
from pathlib import Path
import random
import time
import base64
from PIL import Image
import io
import fitz  # PyMuPDF
import re

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Sistema de Estudos Veterin√°ria",
    page_icon="üêæ",
    layout="wide"
)

# CSS personalizado
st.markdown("""
<style>
    .main-title {
        color: #2196F3;
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
        margin-bottom: 0.5rem;
    }
    .subtitle {
        color: #666;
        font-size: 1.2rem;
        text-align: center;
        margin-bottom: 2rem;
    }
</style>
""", unsafe_allow_html=True)

# T√≠tulo principal
st.title("üêæ Sistema de Estudos Veterin√°ria")
st.markdown("<p style='text-align: center; font-size: 1.2rem; color: #666;'>Desenvolvido por Victor Rodrigues</p>", unsafe_allow_html=True)

# Fun√ß√£o para ler e exibir conte√∫do markdown
def exibir_conteudo(arquivo):
    try:
        with open(arquivo, 'r', encoding='utf-8') as f:
            conteudo = f.read()
            st.markdown(conteudo)
    except Exception as e:
        st.error(f"Erro ao ler o arquivo: {str(e)}")

# Fun√ß√£o para listar arquivos markdown em um diret√≥rio
def listar_arquivos_md(diretorio):
    return sorted([f for f in os.listdir(diretorio) if f.endswith('.md')])

# Diret√≥rio base dos resumos
diretorio_resumos = "Resumos_IA"

# Dicion√°rios para organizar os arquivos
arquivos_farmacologia = {
    "Fundamentos de Farmacologia": [],
    "F√°rmacos do Sistema Nervoso": [],
    "F√°rmacos Cardiovasculares": [],
    "Anti-inflamat√≥rios e Analg√©sicos": [],
    "Anest√©sicos": [],
    "Outros F√°rmacos": []
}

arquivos_sistemas = {
    "Sistema Nervoso": [],
    "Sistema Cardiovascular": [],
    "Sistema Respirat√≥rio": [],
    "Sistema Digestivo": [],
    "Sistema Urin√°rio": [],
    "Sistema End√≥crino": [],
    "Sistema Imune": [],
    "Sistema Reprodutor": [],
    "Sistema Tegumentar": [],
    "Sistema Musculoesquel√©tico": [],
    "Sistema Sensorial": [],
    "Sistema Hematopoi√©tico": [],
    "Sistema Linf√°tico": []
}

# Classificar os arquivos
for arquivo in listar_arquivos_md(diretorio_resumos):
    caminho_completo = os.path.join(diretorio_resumos, arquivo)
    nome_arquivo = arquivo.replace('.md', '').lower()
    
    # Classifica√ß√£o de Farmacologia
    if any(termo in nome_arquivo for termo in ['farmaco', 'farmacocinetica', 'farmacodinamica']):
        arquivos_farmacologia["Fundamentos de Farmacologia"].append((arquivo, caminho_completo))
    elif any(termo in nome_arquivo for termo in ['nervoso', 'neural', 'neuro']) and 'farmaco' in nome_arquivo:
        arquivos_farmacologia["F√°rmacos do Sistema Nervoso"].append((arquivo, caminho_completo))
    elif any(termo in nome_arquivo for termo in ['cardio', 'vascular']) and 'farmaco' in nome_arquivo:
        arquivos_farmacologia["F√°rmacos Cardiovasculares"].append((arquivo, caminho_completo))
    elif any(termo in nome_arquivo for termo in ['anti', 'analgesic', 'dor']):
        arquivos_farmacologia["Anti-inflamat√≥rios e Analg√©sicos"].append((arquivo, caminho_completo))
    elif 'anestesic' in nome_arquivo:
        arquivos_farmacologia["Anest√©sicos"].append((arquivo, caminho_completo))
    elif 'farmaco' in nome_arquivo:
        arquivos_farmacologia["Outros F√°rmacos"].append((arquivo, caminho_completo))
    
    # Classifica√ß√£o de Sistemas
    elif 'nervoso' in nome_arquivo or 'neural' in nome_arquivo:
        arquivos_sistemas["Sistema Nervoso"].append((arquivo, caminho_completo))
    elif 'cardiovascular' in nome_arquivo or 'cardio' in nome_arquivo:
        arquivos_sistemas["Sistema Cardiovascular"].append((arquivo, caminho_completo))
    elif 'respiratorio' in nome_arquivo:
        arquivos_sistemas["Sistema Respirat√≥rio"].append((arquivo, caminho_completo))
    elif 'digestivo' in nome_arquivo:
        arquivos_sistemas["Sistema Digestivo"].append((arquivo, caminho_completo))
    elif 'urinario' in nome_arquivo:
        arquivos_sistemas["Sistema Urin√°rio"].append((arquivo, caminho_completo))
    elif 'endocrino' in nome_arquivo:
        arquivos_sistemas["Sistema End√≥crino"].append((arquivo, caminho_completo))
    elif 'imune' in nome_arquivo:
        arquivos_sistemas["Sistema Imune"].append((arquivo, caminho_completo))
    elif 'reprodut' in nome_arquivo:
        arquivos_sistemas["Sistema Reprodutor"].append((arquivo, caminho_completo))
    elif 'tegumentar' in nome_arquivo:
        arquivos_sistemas["Sistema Tegumentar"].append((arquivo, caminho_completo))
    elif 'musculo' in nome_arquivo:
        arquivos_sistemas["Sistema Musculoesquel√©tico"].append((arquivo, caminho_completo))
    elif 'sensorial' in nome_arquivo:
        arquivos_sistemas["Sistema Sensorial"].append((arquivo, caminho_completo))
    elif 'hematop' in nome_arquivo:
        arquivos_sistemas["Sistema Hematopoi√©tico"].append((arquivo, caminho_completo))
    elif 'linfatico' in nome_arquivo:
        arquivos_sistemas["Sistema Linf√°tico"].append((arquivo, caminho_completo))

# Interface principal com tr√™s abas
tab1, tab2, tab3 = st.tabs(["üìö Farmacologia", "üî¨ Sistemas", "üìä Estat√≠sticas"])

with tab1:
    st.markdown("<h2 class='section-title'>üìö Farmacologia</h2>", unsafe_allow_html=True)
    
    for categoria, arquivos in arquivos_farmacologia.items():
        if arquivos:  # S√≥ mostra categorias com arquivos
            st.markdown(f"<h3 class='subsection-title'>{categoria}</h3>", unsafe_allow_html=True)
            for arquivo, caminho in sorted(arquivos):
                with st.expander(f"üìñ {arquivo.replace('.md', '').replace('_', ' ').title()}"):
                    exibir_conteudo(caminho)

with tab2:
    st.markdown("<h2 class='section-title'>üî¨ Sistemas</h2>", unsafe_allow_html=True)
    
    for categoria, arquivos in arquivos_sistemas.items():
        if arquivos:  # S√≥ mostra categorias com arquivos
            st.markdown(f"<h3 class='subsection-title'>{categoria}</h3>", unsafe_allow_html=True)
            for arquivo, caminho in sorted(arquivos):
                with st.expander(f"üìñ {arquivo.replace('.md', '').replace('_', ' ').title()}"):
                    exibir_conteudo(caminho)

with tab3:
    st.markdown("<h2 class='section-title'>üìä Estat√≠sticas do Material</h2>", unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("### üìö Farmacologia")
        for categoria, arquivos in arquivos_farmacologia.items():
            if arquivos:
                st.metric(categoria, len(arquivos))
    
    with col2:
        st.markdown("### üî¨ Sistemas")
        for categoria, arquivos in arquivos_sistemas.items():
            if arquivos:
                st.metric(categoria, len(arquivos))
    
    # Total geral
    st.markdown("### üìà Total Geral")
    total_farmacologia = sum(len(arquivos) for arquivos in arquivos_farmacologia.values())
    total_sistemas = sum(len(arquivos) for arquivos in arquivos_sistemas.values())
    total_geral = total_farmacologia + total_sistemas
    
    col1, col2, col3 = st.columns(3)
    col1.metric("Total Farmacologia", total_farmacologia)
    col2.metric("Total Sistemas", total_sistemas)
    col3.metric("Total Geral", total_geral)

# Barra lateral com busca
with st.sidebar:
    st.markdown("### üîç Busca")
    termo_busca = st.text_input("Buscar conte√∫do:")
    if termo_busca:
        st.markdown("#### Resultados da busca:")
        termo_lower = termo_busca.lower()
        encontrados = False
        
        # Busca em Farmacologia
        st.markdown("##### üìö Em Farmacologia:")
        for categoria, arquivos in arquivos_farmacologia.items():
            for arquivo, caminho in arquivos:
                if termo_lower in arquivo.lower():
                    st.markdown(f"- {arquivo.replace('.md', '').replace('_', ' ').title()}")
                    encontrados = True
        
        # Busca em Sistemas
        st.markdown("##### üî¨ Em Sistemas:")
        for categoria, arquivos in arquivos_sistemas.items():
            for arquivo, caminho in arquivos:
                if termo_lower in arquivo.lower():
                    st.markdown(f"- {arquivo.replace('.md', '').replace('_', ' ').title()}")
                    encontrados = True
        
        if not encontrados:
            st.info("Nenhum resultado encontrado.")
    
    # Informa√ß√µes do sistema
    st.markdown("---")
    st.markdown("### ‚ÑπÔ∏è Sobre")
    st.markdown("""
    Sistema de estudos para Medicina Veterin√°ria com:
    - üìö Material organizado por temas
    - üîç Busca integrada
    - üìä Estat√≠sticas do material
    """)
    
    st.markdown("---")
    st.markdown("Desenvolvido com ‚ù§Ô∏è para estudantes de Veterin√°ria") 